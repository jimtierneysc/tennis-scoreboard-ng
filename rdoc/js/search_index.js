var search_data = {"index":{"searchIndex":["applicationcontroller","activerecord","authenticable","exceptions","applicationerror","invalidoperation","notfound","unknownoperation","match","matchloader","classmethods","matchplayhelpers","playmethods","completecurrent","removelastscoringchange","startnext","playerservershelper","validatechangematch","validationhelper","matchset","player","setgame","team","user","v1","matchscoreboardcontroller","exceptions","matchscoreboardserializer","matchserializer","matchsetserializer","matchescontroller","opponentteamserializer","playerserializer","playerscontroller","sessionserializer","sessionscontroller","setgameserializer","teamserializer","teamscontroller","usercontroller","userserializer","actions()","attributes()","attributes()","authorize_user!()","complete_match_tiebreak?()","complete_set?()","complete_set_kind?()","completed?()","completed?()","compute_team_winner()","compute_team_winner()","create()","create()","create()","create()","current_user()","default_serializer_options()","destroy()","destroy()","destroy()","destroy()","eager_load_match()","first_player()","first_player()","first_player()","first_player=()","first_set()","first_team()","games()","generate_authentication_token!()","include_player?()","include_players?()","index()","index()","index()","last_game()","last_set()","lookup_method()","max_sets_to_play()","min_sets_to_play()","near_team_winner?()","near_team_winner?()","near_winners()","new()","new()","new()","new()","new()","new()","new()","next_game_ordinal()","next_player_server()","opponent_id()","play_actions()","play_match!()","play_match?()","rescue_record_not_found()","score_changed()","scoring_of_set_ordinal()","second_player()","second_player()","second_player()","second_player=()","second_team()","server()","servers()","sets()","sets_won()","show()","show()","show()","show()","show()","singles_team()","singles_team!()","start_game()","start_game?()","start_match_tiebreak?()","start_set?()","start_tiebreak()","start_tiebreak?()","state()","state()","state()","team_of_player()","tiebreak?()","tiebreak?()","tiebreak_game?()","tiebreak_set?()","update()","update()","update()","update()","user_signed_in?()","valid_actions()","validate()","validate()","win_game()","win_game?()","win_game_kind()","win_game_kind?()","win_match_tiebreak()","win_match_tiebreak?()","win_threshold()","win_tiebreak()","win_tiebreak?()","winner()","winner()","winner()"],"longSearchIndex":["applicationcontroller","applicationcontroller::activerecord","authenticable","exceptions","exceptions::applicationerror","exceptions::invalidoperation","exceptions::notfound","exceptions::unknownoperation","match","matchloader","matchloader::classmethods","matchplayhelpers","matchplayhelpers::playmethods","matchplayhelpers::playmethods::completecurrent","matchplayhelpers::playmethods::removelastscoringchange","matchplayhelpers::playmethods::startnext","matchplayhelpers::playmethods::startnext::playerservershelper","matchplayhelpers::validatechangematch","matchplayhelpers::validationhelper","matchset","player","setgame","team","user","v1","v1::matchscoreboardcontroller","v1::matchscoreboardcontroller::exceptions","v1::matchscoreboardserializer","v1::matchserializer","v1::matchsetserializer","v1::matchescontroller","v1::opponentteamserializer","v1::playerserializer","v1::playerscontroller","v1::sessionserializer","v1::sessionscontroller","v1::setgameserializer","v1::teamserializer","v1::teamscontroller","v1::usercontroller","v1::userserializer","v1::matchscoreboardserializer#actions()","v1::matchserializer#attributes()","v1::setgameserializer#attributes()","authenticable#authorize_user!()","matchplayhelpers::playmethods::completecurrent#complete_match_tiebreak?()","matchplayhelpers::playmethods::completecurrent#complete_set?()","matchplayhelpers::playmethods::completecurrent#complete_set_kind?()","match#completed?()","matchset#completed?()","match#compute_team_winner()","matchset#compute_team_winner()","v1::matchescontroller#create()","v1::playerscontroller#create()","v1::sessionscontroller#create()","v1::teamscontroller#create()","authenticable#current_user()","applicationcontroller#default_serializer_options()","v1::matchescontroller#destroy()","v1::playerscontroller#destroy()","v1::sessionscontroller#destroy()","v1::teamscontroller#destroy()","matchloader::classmethods#eager_load_match()","match#first_player()","v1::matchserializer#first_player()","v1::opponentteamserializer#first_player()","match#first_player=()","match#first_set()","v1::matchserializer#first_team()","v1::matchsetserializer#games()","user#generate_authentication_token!()","team#include_player?()","team#include_players?()","v1::matchescontroller#index()","v1::playerscontroller#index()","v1::teamscontroller#index()","matchset#last_game()","match#last_set()","matchplayhelpers::playmethods#lookup_method()","match#max_sets_to_play()","match#min_sets_to_play()","match#near_team_winner?()","matchset#near_team_winner?()","v1::matchscoreboardserializer#near_winners()","matchplayhelpers::playmethods::new()","matchplayhelpers::playmethods::completecurrent::new()","matchplayhelpers::playmethods::removelastscoringchange::new()","matchplayhelpers::playmethods::startnext::new()","matchplayhelpers::playmethods::startnext::playerservershelper::new()","matchplayhelpers::validatechangematch::new()","matchplayhelpers::validationhelper::new()","match#next_game_ordinal()","matchplayhelpers::playmethods::startnext::playerservershelper#next_player_server()","v1::matchserializer#opponent_id()","match#play_actions()","match#play_match!()","match#play_match?()","applicationcontroller#rescue_record_not_found()","matchset#score_changed()","match#scoring_of_set_ordinal()","match#second_player()","v1::matchserializer#second_player()","v1::opponentteamserializer#second_player()","match#second_player=()","v1::matchserializer#second_team()","v1::setgameserializer#server()","v1::matchscoreboardserializer#servers()","v1::matchscoreboardserializer#sets()","match#sets_won()","v1::matchscoreboardcontroller#show()","v1::matchescontroller#show()","v1::playerscontroller#show()","v1::teamscontroller#show()","v1::usercontroller#show()","player#singles_team()","player#singles_team!()","matchplayhelpers::playmethods::startnext#start_game()","matchplayhelpers::playmethods::startnext#start_game?()","matchplayhelpers::playmethods::startnext#start_match_tiebreak?()","matchplayhelpers::playmethods::startnext#start_set?()","matchplayhelpers::playmethods::startnext#start_tiebreak()","matchplayhelpers::playmethods::startnext#start_tiebreak?()","match#state()","matchset#state()","setgame#state()","match#team_of_player()","matchset#tiebreak?()","setgame#tiebreak?()","matchset#tiebreak_game?()","match#tiebreak_set?()","v1::matchscoreboardcontroller#update()","v1::matchescontroller#update()","v1::playerscontroller#update()","v1::teamscontroller#update()","authenticable#user_signed_in?()","matchplayhelpers::playmethods#valid_actions()","matchplayhelpers::validatechangematch#validate()","matchplayhelpers::validationhelper#validate()","matchplayhelpers::playmethods::completecurrent#win_game()","matchplayhelpers::playmethods::completecurrent#win_game?()","matchplayhelpers::playmethods::completecurrent#win_game_kind()","matchplayhelpers::playmethods::completecurrent#win_game_kind?()","matchplayhelpers::playmethods::completecurrent#win_match_tiebreak()","matchplayhelpers::playmethods::completecurrent#win_match_tiebreak?()","matchset#win_threshold()","matchplayhelpers::playmethods::completecurrent#win_tiebreak()","matchplayhelpers::playmethods::completecurrent#win_tiebreak?()","v1::matchserializer#winner()","v1::matchsetserializer#winner()","v1::setgameserializer#winner()"],"info":[["ApplicationController","","ApplicationController.html","","<p>Application controller\n<p>Base class for controllers\n"],["ApplicationController::ActiveRecord","","ApplicationController/ActiveRecord.html","",""],["Authenticable","","Authenticable.html","",""],["Exceptions","","Exceptions.html","","<p>Custom exception classes\n"],["Exceptions::ApplicationError","","Exceptions/ApplicationError.html","",""],["Exceptions::InvalidOperation","","Exceptions/InvalidOperation.html","",""],["Exceptions::NotFound","","Exceptions/NotFound.html","",""],["Exceptions::UnknownOperation","","Exceptions/UnknownOperation.html","",""],["Match","","Match.html","","<p>This class holds the letters in the original word or phrase. The\nis_anagram? method allows us to test …\n"],["MatchLoader","","MatchLoader.html","","<p>Utility code shared by models.\n"],["MatchLoader::ClassMethods","","MatchLoader/ClassMethods.html","",""],["MatchPlayHelpers","","MatchPlayHelpers.html","","<p>Match Play Helpers\n<p>Classes to play a match\n<p>Classes to validate a match\n"],["MatchPlayHelpers::PlayMethods","","MatchPlayHelpers/PlayMethods.html","","<p>Class to start a match, start a game, win a game, etc.\n"],["MatchPlayHelpers::PlayMethods::CompleteCurrent","","MatchPlayHelpers/PlayMethods/CompleteCurrent.html","","<p>Helper class to complete games, tiebreaks, sets and match tiebreaks\n"],["MatchPlayHelpers::PlayMethods::RemoveLastScoringChange","","MatchPlayHelpers/PlayMethods/RemoveLastScoringChange.html","","<p>Class to remove last state change.  For example, after a game has been\nstarted, this class will remove …\n"],["MatchPlayHelpers::PlayMethods::StartNext","","MatchPlayHelpers/PlayMethods/StartNext.html","","<p>Helper class to start games, tiebreaks, sets, and match tiebreaks\n"],["MatchPlayHelpers::PlayMethods::StartNext::PlayerServersHelper","","MatchPlayHelpers/PlayMethods/StartNext/PlayerServersHelper.html","","<p>Class to manage first servers.  At the beginning of a match a particular\nplayer must server first.\n"],["MatchPlayHelpers::ValidateChangeMatch","","MatchPlayHelpers/ValidateChangeMatch.html","","<p>Class to validate changes to match after start play. For example, the match\ntype (doubles/singles) may …\n"],["MatchPlayHelpers::ValidationHelper","","MatchPlayHelpers/ValidationHelper.html","","<p>Class to validate the match attributes\n"],["MatchSet","","MatchSet.html","","<p>Model for a set in a match\n<p>A set may has a state: in progress and complete\n<p>A match tiebreak is a special …\n"],["Player","","Player.html","","<p>Model for a player\n<p>A player may be on a doubles team or a singles team\n<p>A singles team is a special kind …\n"],["SetGame","","SetGame.html","","<p>Model for a game\n<p>Every game is in a set\n<p>Every game has an ordinal.  The first game in the set has ordinal …\n"],["Team","","Team.html","","<p>Model for a team\n<p>A team may be an opponent in a match\n<p>A team may be the winner of a game, a match or a …\n"],["User","","User.html","","<p>Model for a user\n<p>A user has a name, password and authorization token\n"],["V1","","V1.html","",""],["V1::MatchScoreboardController","","V1/MatchScoreboardController.html","","<p>Controller for a match scoreboard\n<p>Renders the current state of the match\n<p>Handles commands to play the match …\n"],["V1::MatchScoreboardController::Exceptions","","V1/MatchScoreboardController/Exceptions.html","",""],["V1::MatchScoreboardSerializer","","V1/MatchScoreboardSerializer.html","",""],["V1::MatchSerializer","","V1/MatchSerializer.html","",""],["V1::MatchSetSerializer","","V1/MatchSetSerializer.html","",""],["V1::MatchesController","","V1/MatchesController.html","","<p>Controller for matches\n<p>Renders a list of matches\n<p>Renders a single match\n"],["V1::OpponentTeamSerializer","","V1/OpponentTeamSerializer.html","",""],["V1::PlayerSerializer","","V1/PlayerSerializer.html","",""],["V1::PlayersController","","V1/PlayersController.html","","<p>Controller for players\n<p>Renders a list of players\n<p>Renders a single player\n"],["V1::SessionSerializer","","V1/SessionSerializer.html","",""],["V1::SessionsController","","V1/SessionsController.html","","<p>Controller for a user session\n<p>Validates credentials and returns authentication token\n<p>Regenerates the authentication …\n"],["V1::SetGameSerializer","","V1/SetGameSerializer.html","",""],["V1::TeamSerializer","","V1/TeamSerializer.html","",""],["V1::TeamsController","","V1/TeamsController.html","","<p>Controller for teams\n<p>Renders a list of teams\n<p>Renders a single team\n"],["V1::UserController","","V1/UserController.html","","<p>Controller for the current user\n<p>Renders the current user.  The current user is determined by the\nauthentication …\n"],["V1::UserSerializer","","V1/UserSerializer.html","",""],["actions","V1::MatchScoreboardSerializer","V1/MatchScoreboardSerializer.html#method-i-actions","()",""],["attributes","V1::MatchSerializer","V1/MatchSerializer.html#method-i-attributes","()",""],["attributes","V1::SetGameSerializer","V1/SetGameSerializer.html#method-i-attributes","(*args)",""],["authorize_user!","Authenticable","Authenticable.html#method-i-authorize_user-21","()",""],["complete_match_tiebreak?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-complete_match_tiebreak-3F","()",""],["complete_set?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-complete_set-3F","()",""],["complete_set_kind?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-complete_set_kind-3F","(kind)",""],["completed?","Match","Match.html#method-i-completed-3F","()","<p>Retrieve information about the match\n"],["completed?","MatchSet","MatchSet.html#method-i-completed-3F","()",""],["compute_team_winner","Match","Match.html#method-i-compute_team_winner","()","<p>return the winner of the match, if any\n"],["compute_team_winner","MatchSet","MatchSet.html#method-i-compute_team_winner","()",""],["create","V1::MatchesController","V1/MatchesController.html#method-i-create","()","<p>POST /matches\n"],["create","V1::PlayersController","V1/PlayersController.html#method-i-create","()","<p>POST /players POST /players.json\n"],["create","V1::SessionsController","V1/SessionsController.html#method-i-create","()",""],["create","V1::TeamsController","V1/TeamsController.html#method-i-create","()","<p>POST /teams POST /teams.json\n"],["current_user","Authenticable","Authenticable.html#method-i-current_user","()","<p>Devise methods overwrites\n"],["default_serializer_options","ApplicationController","ApplicationController.html#method-i-default_serializer_options","()",""],["destroy","V1::MatchesController","V1/MatchesController.html#method-i-destroy","()","<p>DELETE /matches/1\n"],["destroy","V1::PlayersController","V1/PlayersController.html#method-i-destroy","()","<p>DELETE /players/1\n"],["destroy","V1::SessionsController","V1/SessionsController.html#method-i-destroy","()",""],["destroy","V1::TeamsController","V1/TeamsController.html#method-i-destroy","()","<p>DELETE /teams/1\n"],["eager_load_match","MatchLoader::ClassMethods","MatchLoader/ClassMethods.html#method-i-eager_load_match","(match_id)","<p>Load match, sets, games, teams and players at once.\n"],["first_player","Match","Match.html#method-i-first_player","()","<p>The opponents in a match are teams.  For singles matches, each team has a\nsingle player.\n"],["first_player","V1::MatchSerializer","V1/MatchSerializer.html#method-i-first_player","()",""],["first_player","V1::OpponentTeamSerializer","V1/OpponentTeamSerializer.html#method-i-first_player","()",""],["first_player=","Match","Match.html#method-i-first_player-3D","(player)",""],["first_set","Match","Match.html#method-i-first_set","()",""],["first_team","V1::MatchSerializer","V1/MatchSerializer.html#method-i-first_team","()",""],["games","V1::MatchSetSerializer","V1/MatchSetSerializer.html#method-i-games","()",""],["generate_authentication_token!","User","User.html#method-i-generate_authentication_token-21","()",""],["include_player?","Team","Team.html#method-i-include_player-3F","(player)",""],["include_players?","Team","Team.html#method-i-include_players-3F","(players)","<p>indicate whether team includes a set of players\n"],["index","V1::MatchesController","V1/MatchesController.html#method-i-index","()","<p>GET /matches\n"],["index","V1::PlayersController","V1/PlayersController.html#method-i-index","()","<p>GET /players\n"],["index","V1::TeamsController","V1/TeamsController.html#method-i-index","()","<p>GET /teams\n"],["last_game","MatchSet","MatchSet.html#method-i-last_game","()",""],["last_set","Match","Match.html#method-i-last_set","()",""],["lookup_method","MatchPlayHelpers::PlayMethods","MatchPlayHelpers/PlayMethods.html#method-i-lookup_method","(action)",""],["max_sets_to_play","Match","Match.html#method-i-max_sets_to_play","()",""],["min_sets_to_play","Match","Match.html#method-i-min_sets_to_play","()",""],["near_team_winner?","Match","Match.html#method-i-near_team_winner-3F","(team)",""],["near_team_winner?","MatchSet","MatchSet.html#method-i-near_team_winner-3F","(team)","<p>Identify teams that can win set with one more game win\n"],["near_winners","V1::MatchScoreboardSerializer","V1/MatchScoreboardSerializer.html#method-i-near_winners","()",""],["new","MatchPlayHelpers::PlayMethods","MatchPlayHelpers/PlayMethods.html#method-c-new","(match)",""],["new","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-c-new","(match)",""],["new","MatchPlayHelpers::PlayMethods::RemoveLastScoringChange","MatchPlayHelpers/PlayMethods/RemoveLastScoringChange.html#method-c-new","(match)",""],["new","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-c-new","(match)",""],["new","MatchPlayHelpers::PlayMethods::StartNext::PlayerServersHelper","MatchPlayHelpers/PlayMethods/StartNext/PlayerServersHelper.html#method-c-new","(match)",""],["new","MatchPlayHelpers::ValidateChangeMatch","MatchPlayHelpers/ValidateChangeMatch.html#method-c-new","(match)",""],["new","MatchPlayHelpers::ValidationHelper","MatchPlayHelpers/ValidationHelper.html#method-c-new","(match)",""],["next_game_ordinal","Match","Match.html#method-i-next_game_ordinal","()",""],["next_player_server","MatchPlayHelpers::PlayMethods::StartNext::PlayerServersHelper","MatchPlayHelpers/PlayMethods/StartNext/PlayerServersHelper.html#method-i-next_player_server","()","<p>Once the first server(s) are known, the server for a particular game can be\ncalculated.\n"],["opponent_id","V1::MatchSerializer","V1/MatchSerializer.html#method-i-opponent_id","(team)",""],["play_actions","Match","Match.html#method-i-play_actions","()","<p>Return hash of valid actions, for example {start_game: true}\n"],["play_match!","Match","Match.html#method-i-play_match-21","(action, options = nil)","<p>play_match!\n<p>action\n<p>:start_play\n"],["play_match?","Match","Match.html#method-i-play_match-3F","(action)","<p>Can action be applied?\n"],["rescue_record_not_found","ApplicationController","ApplicationController.html#method-i-rescue_record_not_found","()",""],["score_changed","MatchSet","MatchSet.html#method-i-score_changed","()","<p>Notification to clear cached values\n"],["scoring_of_set_ordinal","Match","Match.html#method-i-scoring_of_set_ordinal","(ordinal)",""],["second_player","Match","Match.html#method-i-second_player","()",""],["second_player","V1::MatchSerializer","V1/MatchSerializer.html#method-i-second_player","()",""],["second_player","V1::OpponentTeamSerializer","V1/OpponentTeamSerializer.html#method-i-second_player","()",""],["second_player=","Match","Match.html#method-i-second_player-3D","(player)",""],["second_team","V1::MatchSerializer","V1/MatchSerializer.html#method-i-second_team","()",""],["server","V1::SetGameSerializer","V1/SetGameSerializer.html#method-i-server","()",""],["servers","V1::MatchScoreboardSerializer","V1/MatchScoreboardSerializer.html#method-i-servers","()",""],["sets","V1::MatchScoreboardSerializer","V1/MatchScoreboardSerializer.html#method-i-sets","()",""],["sets_won","Match","Match.html#method-i-sets_won","(team)",""],["show","V1::MatchScoreboardController","V1/MatchScoreboardController.html#method-i-show","()",""],["show","V1::MatchesController","V1/MatchesController.html#method-i-show","()","<p>GET /matches/1\n"],["show","V1::PlayersController","V1/PlayersController.html#method-i-show","()","<p>GET /players/1\n"],["show","V1::TeamsController","V1/TeamsController.html#method-i-show","()","<p>GET /teams/1\n"],["show","V1::UserController","V1/UserController.html#method-i-show","()",""],["singles_team","Player","Player.html#method-i-singles_team","()",""],["singles_team!","Player","Player.html#method-i-singles_team-21","()","<p>Force a player to have a unique singles team\n"],["start_game","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_game","()",""],["start_game?","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_game-3F","()",""],["start_match_tiebreak?","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_match_tiebreak-3F","()",""],["start_set?","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_set-3F","()",""],["start_tiebreak","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_tiebreak","()",""],["start_tiebreak?","MatchPlayHelpers::PlayMethods::StartNext","MatchPlayHelpers/PlayMethods/StartNext.html#method-i-start_tiebreak-3F","()",""],["state","Match","Match.html#method-i-state","()",""],["state","MatchSet","MatchSet.html#method-i-state","()",""],["state","SetGame","SetGame.html#method-i-state","()",""],["team_of_player","Match","Match.html#method-i-team_of_player","(player)",""],["tiebreak?","MatchSet","MatchSet.html#method-i-tiebreak-3F","()",""],["tiebreak?","SetGame","SetGame.html#method-i-tiebreak-3F","()",""],["tiebreak_game?","MatchSet","MatchSet.html#method-i-tiebreak_game-3F","(game_ordinal)",""],["tiebreak_set?","Match","Match.html#method-i-tiebreak_set-3F","(ordinal)",""],["update","V1::MatchScoreboardController","V1/MatchScoreboardController.html#method-i-update","()","<p>POST change to score /match_scoreboard/1\n"],["update","V1::MatchesController","V1/MatchesController.html#method-i-update","()","<p>PATCH/PUT /matches/1\n"],["update","V1::PlayersController","V1/PlayersController.html#method-i-update","()","<p>PATCH/PUT /players/1\n"],["update","V1::TeamsController","V1/TeamsController.html#method-i-update","()","<p>PATCH/PUT /teams/1\n"],["user_signed_in?","Authenticable","Authenticable.html#method-i-user_signed_in-3F","()",""],["valid_actions","MatchPlayHelpers::PlayMethods","MatchPlayHelpers/PlayMethods.html#method-i-valid_actions","()","<p>Return hash of valid actions, for example {start_game: true}\n"],["validate","MatchPlayHelpers::ValidateChangeMatch","MatchPlayHelpers/ValidateChangeMatch.html#method-i-validate","(errors)",""],["validate","MatchPlayHelpers::ValidationHelper","MatchPlayHelpers/ValidationHelper.html#method-i-validate","(errors)",""],["win_game","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_game","(team)",""],["win_game?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_game-3F","()",""],["win_game_kind","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_game_kind","(team, kind)",""],["win_game_kind?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_game_kind-3F","(kind)",""],["win_match_tiebreak","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_match_tiebreak","(team)",""],["win_match_tiebreak?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_match_tiebreak-3F","()",""],["win_threshold","MatchSet","MatchSet.html#method-i-win_threshold","()",""],["win_tiebreak","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_tiebreak","(team)",""],["win_tiebreak?","MatchPlayHelpers::PlayMethods::CompleteCurrent","MatchPlayHelpers/PlayMethods/CompleteCurrent.html#method-i-win_tiebreak-3F","()",""],["winner","V1::MatchSerializer","V1/MatchSerializer.html#method-i-winner","()",""],["winner","V1::MatchSetSerializer","V1/MatchSetSerializer.html#method-i-winner","()",""],["winner","V1::SetGameSerializer","V1/SetGameSerializer.html#method-i-winner","()",""]]}}