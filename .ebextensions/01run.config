option_settings:
  - option_name: RAILS_SKIP_ASSET_COMPILATION
    value: true
commands:
  01get_sudo:
    command: echo Defaults:root \!requiretty >> /etc/sudoers
  02npm_install:
    command: sudo yum -y --enablerepo=epel install nodejs npm
  03npm_install_bower:
    command: sudo npm install -g bower
  04npm_install_gulp:
    command: sudo npm install -g gulp
  05yum_install_git:
    command: sudo yum -y --enablerepo=epel install git
container_commands:
  06bower_install:
    cwd: /var/app/ondeck/client
    command: sudo bower install --allow-root
  07node_install:
    cwd: /var/app/ondeck/client
    command: sudo npm install
  08gulp_default:
    cwd: /var/app/ondeck/client
    command: sudo gulp
files:
    "/etc/nginx/conf.d/webapp_healthd.conf" :
        mode: "000755"
        owner: root
        group: root
        content: |
          upstream my_app {
            server unix:///var/run/puma/my_app.sock;
          }

          log_format healthd '$msec"$uri"'
                          '$status"$request_time"$upstream_response_time"'
                          '$http_x_forwarded_for';

          server {
            listen 80;
            server_name _ localhost; # need to listen to localhost for worker tier

            if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
            }

            access_log  /var/log/nginx/access.log  main;
            access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

            # serve static files from the gulp output directory
            location / {
              alias /var/app/current/dist/;
              gzip_static on;
              gzip on;
              expires max;
              add_header Cache-Control public;
            }

            # resolve api requests to rails
            location /api {
              proxy_pass http://my_app; # match the name of upstream directive which is defined above
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             }

          }
